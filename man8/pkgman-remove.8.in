.TH PKGMAN-REMOVE 8 "PKGMAN-#VERSION# Manual"

.SH NAME
pkgman-remove \- remove installed packages

.SH SYNOPSIS
.B pkgman remove
.B [-v|-vv]
.B [--test]
.B [--log]
.B [--deps]
.B [--group]
.BI [--rargs=' PKGRM_ARGS ']
.BI [--ignore= PKG1,PKG2,... ]
.B [--remove-scripts|[--pre-remove][--post-remove]]
.I PKG1 PKG2 ...

.SH DESCRIPTION
Remove all installed packages in the listed order.

.SH OPTIONS
.TP
.B \-v
Be more verbose.
.TP
.B \-vv
Log to stdout the removing process.
.TP
.B \-\-test
Dry run, don't actually remove anything.
.TP
.B \-\-log
Create a transaction log file. It can be set globally for all
transactions (see "writelog" in pkgman.conf(5)).
.TP
.B \-\-deps
Remove all packages in the listed order including their new dependencies.
.TP
.B \-\-group
Remove all packages in the listed order, but stop if removing of
one package fails.
.TP
.BI \-\-rargs=' PKGRM_ARGS '
Arguments to be passed to pkgrm(8).
.TP
.BI \-\-ignore=' PKG1,PKG2,... '
Don't remove those packages, even if they're listed as dependency.
.TP
.B \-\-remove\-scripts
Execute pre-remove and post-remove script if they're there.
.TP
.B \-\-pre\-remove
Execute pre-remove script if it's there.
.TP
.B \-\-post\-remove
Execute post-remove scripts if it's there.

.\" vim:ft=nroff:cc=72
.\" End of file
